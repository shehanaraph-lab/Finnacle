# Generated by Django 5.2.5 on 2025-08-20 05:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "firebase_uid",
                    models.CharField(
                        blank=True,
                        help_text="Firebase Authentication UID",
                        max_length=128,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="User's phone number",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="User's date of birth", null=True
                    ),
                ),
                (
                    "currency_preference",
                    models.CharField(
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British Pound"),
                            ("JPY", "Japanese Yen"),
                            ("CAD", "Canadian Dollar"),
                            ("AUD", "Australian Dollar"),
                        ],
                        default="USD",
                        help_text="User's preferred currency",
                        max_length=3,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user's email has been verified",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "firebase_email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether Firebase has verified the user's email",
                    ),
                ),
                (
                    "firebase_phone_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether Firebase has verified the user's phone",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "auth_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="User's profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="User's biography or description",
                        max_length=500,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(
                        blank=True, help_text="Address line 1", max_length=255
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, help_text="Address line 2", max_length=255
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="State/Province", max_length=100
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, help_text="Postal/ZIP code", max_length=20
                    ),
                ),
                (
                    "country",
                    models.CharField(blank=True, help_text="Country", max_length=100),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                        ],
                        default="en",
                        help_text="User's preferred language",
                        max_length=10,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", help_text="User's timezone", max_length=50
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive email notifications"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive push notifications"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, help_text="Receive SMS notifications"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "authentication_userprofile",
            },
        ),
    ]
